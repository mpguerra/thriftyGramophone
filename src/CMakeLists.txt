set(THRIFT_FILE "${CMAKE_CURRENT_LIST_DIR}/thriftygramophone.thrift")
set(THRIFT_OUTDIR ${CMAKE_CURRENT_LIST_DIR})
set(THRIFT_FLAGS -r --gen cpp:pure_enums -o ${CMAKE_CURRENT_LIST_DIR})

include (CheckIncludeFiles)
check_include_files (netinet/in.h HAVE_NETINET_IN_H)
if (HAVE_NETINET_IN_H)
  add_definitions(-DHAVE_NETINET_IN_H)
endif(HAVE_NETINET_IN_H)

check_include_files (inttypes.h HAVE_INTTYPES_H)
if (HAVE_INTTYPES_H)
  add_definitions(-DHAVE_INTTYPES_H)
endif(HAVE_INTTYPES_H)

find_program(THRIFT_BIN thrift /bin /usr/bin /usr/local/bin)
if (THRIFT_BIN)
  if(EXISTS ${THRIFT_FILE})
    message("Generating thrift output ${THRIFT_COMMAND}")
    execute_process(COMMAND ${THRIFT_BIN} ${THRIFT_FLAGS} ${THRIFT_FILE} RESULT_VARIABLE result)
    message("Thrift code generation result: ${result}")
    set_directory_properties(${CMAKE_CURRENT_LIST_DIR} ADDITIONAL_MAKE_CLEAN_FILES ${THRIFT_OUTDIR})
    aux_source_directory(gen-cpp THRIFT_GEN_FILES)
  else(EXISTS ${THRIFT_FILE})
    message(SEND_ERROR "Couldn't find ${THRIFT_FILE}")
  endif(EXISTS ${THRIFT_FILE})
else(THRIFT_BIN)
  message(SEND_ERROR "Cannot find thrift in your path.")
endif(THRIFT_BIN)

add_library(tgramophone SHARED player.cpp devices.cpp service.cpp ${THRIFT_GEN_FILES})
add_executable(thriftygramophone main.cpp)
target_link_libraries(thriftygramophone tgramophone ${THRIFT_LIBRARY})